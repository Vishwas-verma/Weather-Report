{"version":3,"sources":["actions/index.tsx","container/SearchBar.tsx","components/chart.tsx","container/WeatherList.tsx","components/app.tsx","reducers/index.tsx","reducers/WeatherReducer.tsx","index.tsx"],"names":["ROOT_URL","fetchWeather","city","url","request","axios","get","console","log","type","payload","SearchBar","props","onInputChange","event","target","value","setState","term","onFormSubmit","preventDefault","state","onSubmit","this","style","textAlign","marginBottom","className","placeholder","onChange","padding","paddingLeft","marginRight","height","width","border","borderRadius","React","Component","connect","dispatch","bindActionCreators","data","color","_","length","units","WeatherList","cityData","temps","list","map","weather","main","temp","pressures","pressure","humidity","key","name","fontSize","renderWeather","App","rootReducer","combineReducers","action","createStoreMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDom","render","store","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.3a240549.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_KEY  = \"75420c4e2026a41d6854b2bbfbf72ef0\";\nconst ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\n\nexport const FETCH_WEATHER = \"FETCH_WEATHER\";\n\nexport function fetchWeather(city: any) {\n  const url     = `${ROOT_URL}&q=${city},ind`;\n  const request = axios.get(url);\n  console.log(request);\n  return {\n    type   : FETCH_WEATHER,\n    payload: request\n  }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchWeather } from \"../actions\";\n\nclass SearchBar extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {term: \"\"};\n    //  this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  onInputChange = (event: any) => {\n    console.log(event.target.value);\n    this.setState({term: event.target.value})\n  }\n\n  onFormSubmit = (event: any) => {\n    event.preventDefault();\n    this.props.fetchWeather(this.state.term)\n    this.setState({term: \"\"});\n  }\n\n  render() {\n    return (\n      <form onSubmit = {this.onFormSubmit}>\n        <div style = {{textAlign: \"center\", marginBottom: \"20px\"}}>\n          <i className = {\"fa fa-search\"}/>\n          <input className = {\"form-control\"}\n                 placeholder = {\"Search for City..\"}\n                 value = {this.state.term}\n                 onChange = {this.onInputChange}\n                 style = {{\n                   padding     : \"5px\",\n                   paddingLeft : \"10px\",\n                   marginRight : \"10px\",\n                   height      : \"30px\",\n                   width       : \"650px\",\n                   border      : \".5px solid black\",\n                   borderRadius: \".45px\"\n                 }}\n                 type = {\"text\"}/>\n          <button type = {\"submit\"}>Submit</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return bindActionCreators({fetchWeather}, dispatch)\n\n}\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React from \"react\";\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine } from \"react-sparklines\";\nimport * as _ from \"lodash\";\n\nfunction average(data: any) {\n  return _.round(_.sum(data) / data.length);\n}\n\nexport default (props: any) => {\n  return (\n    <div>\n      <Sparklines height = {120} width = {180} data = {props.data}>\n        <SparklinesLine color = {props.color}/>\n        <SparklinesReferenceLine type = {\"avg\"}/>\n      </Sparklines>\n      <div>{average(props.data)} {props.units}</div>\n    </div>\n  )\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from \"../components/chart\";\nimport \"../style/table.css\"\n\nclass WeatherList extends React.Component<any, any> {\n  renderWeather(cityData: any) {\n    const temps     = cityData.list.map((weather: any) =>\n      weather.main.temp);\n    const pressures = cityData.list.map((weather: any) =>\n      weather.main.pressure);\n    const humidity  = cityData.list.map((weather: any) =>\n      weather.main.humidity);\n\n    return (\n      <tr key = {cityData.city.name}>\n        <td><strong style={{color:\"black\",fontSize:\"25px\"}}>{cityData.city.name}</strong></td>\n        <td>\n          <Chart data = {temps} color = {\"orange\"} units = {\"K\"}/>\n        </td>\n        <td>\n          <Chart data = {pressures} color = {\"green\"} units = {\"hPa\"}/>\n        </td>\n        <td>\n          <Chart data = {humidity} color = {\"red\"} units = {\"%\"}/>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <table>\n        <thead>\n        <tr>\n          <th>City</th>\n          <th>Temperature(K)</th>\n          <th>Pressure(hPa)</th>\n          <th>Humidity(%)</th>\n        </tr>\n        </thead>\n        <tbody>\n        {this.props.weather.map(this.renderWeather)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction mapsStateToProps(state: any) {\n  return {weather: state.weather}\n}\n\nexport default connect(mapsStateToProps)(WeatherList);","import React from \"react\";\nimport SearchBar from \"../container/SearchBar\";\nimport WeatherList from \"../container/WeatherList\";\n\nclass App extends React.Component<any, any> {\n  render() {\n    return (\n      <div>\n        <SearchBar/>\n        <WeatherList/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport WeatherReducer from \"./WeatherReducer\";\n\nconst rootReducer = combineReducers({\n  weather: WeatherReducer\n});\n\nexport default rootReducer;\n","import {FETCH_WEATHER} from \"../actions\";\n\nexport default function (state=[],action:any) {\nswitch (action.type) {\n  case FETCH_WEATHER:\n    return [action.payload.data,...state]\n}\n\n  return state;\n}","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/app\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ReduxPromise from \"redux-promise\";\nimport reducers from \"./reducers\";\n\nconst createStoreMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDom.render(\n  <Provider store = {createStoreMiddleware(reducers)}>\n    <App/>\n  </Provider>\n  , document.querySelector(\"#root\"));"],"sourceRoot":""}